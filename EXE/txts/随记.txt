注意：下文所有int()调用应理解为floor()

DDIM:((attrib_id*7+bodypart)*6+role)*2=x
HP=HP.prev+10+int(rnd(8))
MP=MP.prev+8+int(rnd(6))
武=武.prev+4+rnd(1);
灵=灵.prev+4+rnd(1);
防=防.prev+2+rnd(1);
速=速.prev+2+rnd(1);
运=运.prev+2;

偷窃金钱=当前金钱/(2+rnd(1));

伤害公式:
calc_base_damage(A,D)
{
若A<0		damage=0
若A>D		damage=A-0.8D
若D>A>0.6D	damage=0.5A-0.3D
若A<0.6D	damage=0
返回damage
}

calc_final_damage(A,M)//数字，法术
{
A*=(1+rnd(0.1));
D=敌防御+4*(敌级别+6);
damage=calc_base_damage(A,D);
damage=damage/2+M基本攻击;
若M有属性
	damage=damage*(10-敌该属性抗性)/5
damage=damage*(10+战地对应属性)/10
返回damage
}

battle:
1,loop:调整所有战斗人员体力>0;为零则改1
2,call:清空物品4,5字节;我方各部位;全攻;乱状态.
       设置战象，合体。装备所有物品
3,loop:五个数字显示数组，清第9，10字节。0：颜色，2：数字，4：Y，6：X，8：？
4,loop:调整所有exp组的7,8字节为0；包括主经验和所有隐藏经验值
5,清空一些变量
6,loop,call:敌主结构填充,包括号，图，HP，脚本，经验值，钱。
            统计敌位。
7,call:调入敌图，根据空位计算位置。
8,call,:调入我图，根据空位计算位置(坐标：单人240-170;双人200-176,256-152;三人180-180,234-170,270-146)慎言计算四人应为(160,184),(204,175),(246,160),(278,144)
8.5.loop 我方bak填充,bak位具体作用未知
9:call,计算我方状态 HP1/5为衰弱，1；HP<0为死亡，2；否则正常，0；眠则1；傀儡则0。
10,获取战场效果->震荡,读取战场背景,存入xms_bak
11,call:产生一屏?
12,loop:淡入：031524间隔淡入，调色板淡入。xms_bak入glb2
13,清空一个2*5向量
LOOP:
14,data@9_in_game_menu入mgo_pack
15,loop:依次执行所有活着的敌人的战前脚本
16,判断是否我方全灭或敌方全灭，是则跳出
17,loop:清空物品5,6字节
18,清空DDIM_thisbattle_about_our?
19,判断:若flag_autobattle为0,重新计算我方状态并清空"前桢"
loop
20,设一些变量
21,call:根据状态设置立卧
22,call:画出所有人物和UI
23,loop:根据状态设置攻击对象
24,loop:若attack_table之2为3/4，[6]->item[4]>0,则[6]->item[4]--
25,判断flag_autobattle不为0,走.
26,设置一些变量为FFFF
27,以glb_6之前4双字节为flag，作4个指令成立与否的标记。清空。
28,若该人HP不“正常”(虚弱或死亡)，合击不成立。若该人被封，仙术不成立。
29,call:4指令选择界面。
30,若确认为任一指令，到其各自子程序。
31,若按键为ESC,考虑上一个人。滤过各种下令不能状态。若非特殊键，下一人。
R:从当前到最后一个人，复制上次指令。若为物攻，根据data3设置单/全攻。若为仙术，根据法术有效与否，被封与否,MP充足与否决定，不成功则对己改为防御，对敌改为单攻；若为物品，根据物品有效与否，当前数量是否用光与否决定，不成功则使用改为防御，投掷改为单攻，物品使用数++。
A:任意选定(第一个位置，若其死，任选一位)一个敌人，全体物攻，自动一回合。
D:当前角色防御。
E/W:调出使用/投掷菜单。
Q:所有人指令槽填逃跑。
S:调出状态。
F:从当前到最有一个人，同A选择一个敌人，所有不超过当前MP且全体且召唤且非终极法术基本伤害+rnd(60)轮盘，我不被封则使用本术，我被封或未选出则单攻。
ESC:返回选择。
looping...
32,设置一些变量
33,loop-loop:计算每敌可攻击次数(sgn(`2次`*rnd(1)))，填充总攻击表之自身(次序+10)，总速度表(commmon,scale(speed,3)*(0.9+rnd(0.2)))
34,loop:计算我速度(cons(速度)*(0.9+rnd(0.2)),合击*10,防御*5,对我法术/物品*3,逃跑/2,此外高速非定身*3,虚弱/2，死掉=0),填充总攻击表之自身(次序),总速度表。
35,loop-loop:按速度逆序排列总攻击表和总速度表
loop
36,清空一些变量，判断是我方还是敌方
37,若是敌方，非定非眠非死，若我方未隐形，计算是否连续第2招，随机选择我方(不同于选敌，这里完全随机)，攻击
  call:乱则任选敌方非己攻。
       执行战时脚本。计算法术概率，术未成普攻，术成且封者有1/2概率普攻，1/2不攻。
       物攻：武力6倍等级加成，call:我处于防御状态则复合防御*2
                                   若弱，7/17概率求援护者,若援护者不弱则无伤,否则damage=calc_base_damage(敌武力+rnd(1),我防御)*(1+rnd(1/8)),若高防/2,控制在最多伤剩余全部HP。若健,7/17概率格挡无伤,否则同弱无援护。
                                   若无格挡无援护且攻击附带成立且未被毒抗,处理附带脚本。
       术法：灵力6倍等级加成，call:
若是我方，若活着或傀儡，滤过眠、封，若`自动`为2,设为任选敌人普攻，若`自动`为9,设为任选敌人任选前四法术攻击。狂则设为疯击。
再判断一次指向之敌是否存活，否则顺次后移。
